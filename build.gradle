buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath "org.elasticsearch.gradle:build-tools:6.5.3"
  }
}

group = 'org.elasticsearch.plugin.ingest'
version = '0.0.1-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'elasticsearch.esplugin'
apply plugin: 'eclipse'
apply plugin: 'antlr'

// license of this project
licenseFile = rootProject.file('LICENSE.txt')
// copyright notices
noticeFile = rootProject.file('NOTICE.txt')

esplugin {
  name 'ingest-code-parser'
  description 'parse code snippets'
  classname 'org.elasticsearch.plugin.ingest.code.parser.IngestCodeParserPlugin'
  // license of the plugin, may be different than the above license
  licenseFile rootProject.file('LICENSE.txt')
  // copyright notices, may be different than the above notice
  noticeFile rootProject.file('NOTICE.txt')
}

// In this section you declare the dependencies for your production and test code
// Note, the two dependencies are not really needed as the buildscript dependency gets them in already
// they are just here as an example
dependencies {
  compile 'org.elasticsearch:elasticsearch:6.5.3'
  compile group: "org.antlr", name: "antlr4-runtime", version: "4.7.2"
  antlr "org.antlr:antlr4:4.7.2"
  testCompile 'org.elasticsearch.test:framework:6.5.3'
}

generateGrammarSource {
  maxHeapSize = "64m"
  arguments += ["-visitor", "-long-messages"]
}

// Set to false to not use elasticsearch checkstyle rules
checkstyleMain.enabled = false
checkstyleTest.enabled = false

// FIXME dependency license check needs to be enabled
dependencyLicenses.enabled = false

// FIXME thirdparty audit needs to be enabled
thirdPartyAudit.enabled = false

// Uncomment this to skip license header checks
// licenseHeaders.enabled = false

